View(womensrole)
womensrole$sex<-as.character(womensrole$sex)
WR1<-manova(cbind(disagree, education)~sex, data=womensrole)
summary(WR1)
summary.aov(WR1)
summary(aov(disagree~education, data=womensrole))
obs_F<-7.391
Fs<-replicate(5000,{
new<-womensrole%>%mutate(education=sample(disagree))
SSW<- new%>%group_by(education)%>%summarize(SSW=sum((disagree-mean(disagree))^2))%>%summarize(sum(SSW))%>%pull
SSB<- new%>%mutate(mean=mean(disagree))%>%group_by(education)%>%mutate(groupmean=mean(disagree))%>%
summarize(SSB=sum((mean-groupmean)^2))%>%summarize(sum(SSB))%>%pull
(SSB/1)/(SSW/36)
})
hist(Fs, prob=T); abline(v = obs_F, col="red",add=T)
library(dplyr)
library(lmtest)
library(sandwich)
WR2<-womensrole%>%mutate(y=ifelse(sex=="Male",1,0))
WR2$education_c<-WR2$education-mean(WR2$education, na.rm=T)
WR2$agree_c<-WR2$agree-mean(WR2$agree, na.rm=T)
fit<-lm(disagree~education*agree, data=WR2)
summary(fit)
fit_c<-lm(disagree~education_c*agree_c, data=WR2)
summary(fit_c)
#Plotting the Interaction Plot, mean-centered
ggplot(WR2, aes(x=education_c*agree_c, y=disagree))+geom_smooth(method="lm")
#Checking assumptions of linearity and homoskedasticity
resids<-fit$residuals
fitvals<-fit$fitted.values
ggplot()+geom_point(aes(fitvals, resids))+geom_hline(yintercept=0, color='red')
bptest(disagree~education, data=WR2)
bptest(disagree~agree, data=WR2)
bptest(disagree~education*agree, data=WR2)
#Checking for assumption of normality
ggplot()+geom_histogram(aes(resids), bins=20)
shapiro.test(resids)
#Regression results with Robust Standard Errors
coeftest(fit, vcov=vcovHC(fit))[,1:2]
(sum((WR2$disagree-mean(WR2$disagree))^2)-sum(fit$residuals^2))/sum((WR2$disagree-mean(WR2$disagree))^2)
#Running the same regression model with interaction and the mean-centered version
fit<-lm(disagree~education*agree, data=WR2)
summary(fit)
fit_c<-lm(disagree~education_c*agree_c, data=WR2)
summary(fit_c)
#Creating Bootstrapped Standard Errors
bootstrapSE<-function(x,n=5000){
means<-vector()
for(i in 1:n){
means[i]<-mean(sample(x,replace=T))
}
return(sd(means))
}
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-WR2[sample(nrow(WR2),replace=TRUE),]
fit<-lm(disagree~education_c*agree_c, data=boot_dat)
coef(fit)
})
#Bootstrapped Standard Errors that resample rows
library(dplyr)
samp_distn%>%t%>%as.data.frame%>%summarize_all(sd)
#Regression with Normal Standard Errors
coeftest(fit)[,1:2]
#Regression results with Robust Standard Errors
coeftest(fit, vcov=vcovHC(fit))[,1:2]
library(dplyr)
library(MASS)
library(ggplot2)
library(lmtest)
#Making a Categorical Explanatory Variable
WR2$athome<-WR2$education
WR2$athome[c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28)] = "Yes"
WR2$athome[c(11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42)] = "No"
#Logistic Regression
rit<-glm(y~education+agree, data=WR2, family=binomial(link="logit"))
coeftest(rit)
#Confusion Matrix
probrit<-predict(rit, type="response")
predrit<-ifelse(probrit > 0.5, 1, 0)
logit<-predict(rit)
table(truth=WR2$y, prediction=predrit)%>%addmargins
WR2$logit<-logit
#Computing Accuracy
(6+12)/42
#Computing Sensitivity/Recall (TPR)
12/21
#Computing Specificity (TNR)
6/21
#Computing Precision (PPV)
12/27
#GG-Plot
library(ggplot2)
ggplot(WR2, aes(fill=sex, x=logit))+geom_density(alpha=0.3)
#ROC plot and AUC
library(plotROC)
ROCplot<-ggplot(WR2)+geom_roc(aes(d=y, m=probrit), n.cuts=0)+geom_segment(aes(x=0, xend=1, y=0, yend=1), lty=2)+scale_x_continuous(limits=c(0,1))
ROCplot
calc_auc(ROCplot)
#Repeated Random Sub-Sampling
library(tidyverse); library(lmtest); library(MASS)
WR3<-WR2%>%transmute(education=education, sex=sex, agree=agree, disagree=disagree, education_c=education_c, agree_c=agree_c, athome=athome, logit=logit, y=ifelse(sex=="Male",1,0))
jit<-glm(y~athome+education,data=WR3,family="binomial")
prob<-predict(jit,type="response")
set.seed(1234)
k=5
data1<-WR3[sample(nrow(WR3)),]
folds<-cut(seq(1:nrow(WR3)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$y
hit<-glm(y~athome+education,data=train,family="binomial")
probs<-predict(hit,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))
}
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$y
hit<-glm(y~athome+education,data=train,family="binomial")
probs<-predict(hit,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))
apply(diags, 2, mean)
library(glmnet)
library(glmnet)
#Logistic Regression
library(dplyr)
womensrole$y<-as.factor(WR2$y)
womensrole$sex<-NULL
womensrole$athome<-NULL
womensrole$agree_c<-NULL
womensrole$athome<-WR2$athome
yit<-lm(agree~disagree+education+y, data=womensrole)
#LASSO on Data
y<-as.matrix(womensrole$agree)
model.matrix(yit)
lasso<-glmnet(x,y,lambda=cv$lambda.1se)
x<-model.matrix(yit)[,-1]%>%scale%>%as.matrix
cv<-cv.glmnet(x,y)
lasso<-glmnet(x,y,lambda=cv$lambda.1se)
coef(lasso)
#CV
set.seed(1234)
k=10
data1<-womensrole[sample(nrow(womensrole)),]
folds<-cut(seq(1:nrow(womensrole)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$agree
kit<-lm(agree~disagree+education,data=train)
probs<-predict(kit,newdata = test,type="response")
preds<-ifelse(probs>.5,1,0)
diags<-rbind(diags,class_diag(probs,truth))
}
#Residual Standard Error/RMSE Calculation
library(caret)
#Residual Standard Error/RMSE Calculation
library(caret)
sigma(kit)
summary(kit)
blogdown::serve_site()
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
womensrole <- read.csv("/Users/Nyssa./Desktop/website/content/womensrole.csv")
View(womensrole)
womensrole$sex<-as.character(womensrole$sex)
WR1<-manova(cbind(disagree, education)~sex, data=womensrole)
summary(WR1)
summary.aov(WR1)
summary(aov(disagree~education, data=womensrole))
obs_F<-7.391
Fs<-replicate(5000,{
new<-womensrole%>%mutate(education=sample(disagree))
SSW<- new%>%group_by(education)%>%summarize(SSW=sum((disagree-mean(disagree))^2))%>%summarize(sum(SSW))%>%pull
SSB<- new%>%mutate(mean=mean(disagree))%>%group_by(education)%>%mutate(groupmean=mean(disagree))%>%
summarize(SSB=sum((mean-groupmean)^2))%>%summarize(sum(SSB))%>%pull
(SSB/1)/(SSW/36)
})
hist(Fs, prob=T); abline(v = obs_F, col="red",add=T)
library(dplyr)
library(lmtest)
library(sandwich)
WR2<-womensrole%>%mutate(y=ifelse(sex=="Male",1,0))
WR2$education_c<-WR2$education-mean(WR2$education, na.rm=T)
WR2$agree_c<-WR2$agree-mean(WR2$agree, na.rm=T)
fit<-lm(disagree~education*agree, data=WR2)
summary(fit)
fit_c<-lm(disagree~education_c*agree_c, data=WR2)
summary(fit_c)
#Plotting the Interaction Plot, mean-centered
ggplot(WR2, aes(x=education_c*agree_c, y=disagree))+geom_smooth(method="lm")
#Checking assumptions of linearity and homoskedasticity
resids<-fit$residuals
fitvals<-fit$fitted.values
ggplot()+geom_point(aes(fitvals, resids))+geom_hline(yintercept=0, color='red')
bptest(disagree~education, data=WR2)
bptest(disagree~agree, data=WR2)
bptest(disagree~education*agree, data=WR2)
#Checking for assumption of normality
ggplot()+geom_histogram(aes(resids), bins=20)
shapiro.test(resids)
#Regression results with Robust Standard Errors
coeftest(fit, vcov=vcovHC(fit))[,1:2]
(sum((WR2$disagree-mean(WR2$disagree))^2)-sum(fit$residuals^2))/sum((WR2$disagree-mean(WR2$disagree))^2)
#Running the same regression model with interaction and the mean-centered version
fit<-lm(disagree~education*agree, data=WR2)
summary(fit)
fit_c<-lm(disagree~education_c*agree_c, data=WR2)
summary(fit_c)
#Creating Bootstrapped Standard Errors
bootstrapSE<-function(x,n=5000){
means<-vector()
for(i in 1:n){
means[i]<-mean(sample(x,replace=T))
}
return(sd(means))
}
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-WR2[sample(nrow(WR2),replace=TRUE),]
fit<-lm(disagree~education_c*agree_c, data=boot_dat)
coef(fit)
})
#Bootstrapped Standard Errors that resample rows
library(dplyr)
samp_distn%>%t%>%as.data.frame%>%summarize_all(sd)
#Regression with Normal Standard Errors
coeftest(fit)[,1:2]
#Regression results with Robust Standard Errors
coeftest(fit, vcov=vcovHC(fit))[,1:2]
library(dplyr)
library(MASS)
library(ggplot2)
library(lmtest)
#Making a Categorical Explanatory Variable
WR2$athome<-WR2$education
WR2$athome[c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28)] = "Yes"
WR2$athome[c(11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42)] = "No"
#Logistic Regression
rit<-glm(y~education+agree, data=WR2, family=binomial(link="logit"))
coeftest(rit)
#Confusion Matrix
probrit<-predict(rit, type="response")
predrit<-ifelse(probrit > 0.5, 1, 0)
logit<-predict(rit)
table(truth=WR2$y, prediction=predrit)%>%addmargins
WR2$logit<-logit
#Computing Accuracy
(6+12)/42
#Computing Sensitivity/Recall (TPR)
12/21
#Computing Specificity (TNR)
6/21
#Computing Precision (PPV)
12/27
#GG-Plot
library(ggplot2)
ggplot(WR2, aes(fill=sex, x=logit))+geom_density(alpha=0.3)
#ROC plot and AUC
library(plotROC)
ROCplot<-ggplot(WR2)+geom_roc(aes(d=y, m=probrit), n.cuts=0)+geom_segment(aes(x=0, xend=1, y=0, yend=1), lty=2)+scale_x_continuous(limits=c(0,1))
ROCplot
calc_auc(ROCplot)
#Repeated Random Sub-Sampling
library(tidyverse); library(lmtest); library(MASS)
WR3<-WR2%>%transmute(education=education, sex=sex, agree=agree, disagree=disagree, education_c=education_c, agree_c=agree_c, athome=athome, logit=logit, y=ifelse(sex=="Male",1,0))
jit<-glm(y~athome+education,data=WR3,family="binomial")
prob<-predict(jit,type="response")
set.seed(1234)
k=5
data1<-WR3[sample(nrow(WR3)),]
folds<-cut(seq(1:nrow(WR3)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$y
hit<-glm(y~athome+education,data=train,family="binomial")
probs<-predict(hit,newdata = test,type="response")
diags<-rbind(diags,class_diag(probs,truth))
}
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
womensrole <- read.csv("/Users/Nyssa./Desktop/website/content/womensrole.csv")
View(womensrole)
womensrole$sex<-as.character(womensrole$sex)
WR1<-manova(cbind(disagree, education)~sex, data=womensrole)
summary(WR1)
summary.aov(WR1)
summary(aov(disagree~education, data=womensrole))
obs_F<-7.391
Fs<-replicate(5000,{
new<-womensrole%>%mutate(education=sample(disagree))
SSW<- new%>%group_by(education)%>%summarize(SSW=sum((disagree-mean(disagree))^2))%>%summarize(sum(SSW))%>%pull
SSB<- new%>%mutate(mean=mean(disagree))%>%group_by(education)%>%mutate(groupmean=mean(disagree))%>%
summarize(SSB=sum((mean-groupmean)^2))%>%summarize(sum(SSB))%>%pull
(SSB/1)/(SSW/36)
})
hist(Fs, prob=T); abline(v = obs_F, col="red",add=T)
library(dplyr)
library(lmtest)
library(sandwich)
WR2<-womensrole%>%mutate(y=ifelse(sex=="Male",1,0))
WR2$education_c<-WR2$education-mean(WR2$education, na.rm=T)
WR2$agree_c<-WR2$agree-mean(WR2$agree, na.rm=T)
fit<-lm(disagree~education*agree, data=WR2)
summary(fit)
fit_c<-lm(disagree~education_c*agree_c, data=WR2)
summary(fit_c)
#Plotting the Interaction Plot, mean-centered
ggplot(WR2, aes(x=education_c*agree_c, y=disagree))+geom_smooth(method="lm")
#Checking assumptions of linearity and homoskedasticity
resids<-fit$residuals
fitvals<-fit$fitted.values
ggplot()+geom_point(aes(fitvals, resids))+geom_hline(yintercept=0, color='red')
bptest(disagree~education, data=WR2)
bptest(disagree~agree, data=WR2)
bptest(disagree~education*agree, data=WR2)
#Checking for assumption of normality
ggplot()+geom_histogram(aes(resids), bins=20)
shapiro.test(resids)
#Regression results with Robust Standard Errors
coeftest(fit, vcov=vcovHC(fit))[,1:2]
(sum((WR2$disagree-mean(WR2$disagree))^2)-sum(fit$residuals^2))/sum((WR2$disagree-mean(WR2$disagree))^2)
#Running the same regression model with interaction and the mean-centered version
fit<-lm(disagree~education*agree, data=WR2)
summary(fit)
fit_c<-lm(disagree~education_c*agree_c, data=WR2)
summary(fit_c)
#Creating Bootstrapped Standard Errors
bootstrapSE<-function(x,n=5000){
means<-vector()
for(i in 1:n){
means[i]<-mean(sample(x,replace=T))
}
return(sd(means))
}
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-WR2[sample(nrow(WR2),replace=TRUE),]
fit<-lm(disagree~education_c*agree_c, data=boot_dat)
coef(fit)
})
#Bootstrapped Standard Errors that resample rows
library(dplyr)
samp_distn%>%t%>%as.data.frame%>%summarize_all(sd)
#Regression with Normal Standard Errors
coeftest(fit)[,1:2]
#Regression results with Robust Standard Errors
coeftest(fit, vcov=vcovHC(fit))[,1:2]
library(dplyr)
library(MASS)
library(ggplot2)
library(lmtest)
#Making a Categorical Explanatory Variable
WR2$athome<-WR2$education
WR2$athome[c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28)] = "Yes"
WR2$athome[c(11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42)] = "No"
#Logistic Regression
rit<-glm(y~education+agree, data=WR2, family=binomial(link="logit"))
coeftest(rit)
#Confusion Matrix
probrit<-predict(rit, type="response")
predrit<-ifelse(probrit > 0.5, 1, 0)
logit<-predict(rit)
table(truth=WR2$y, prediction=predrit)%>%addmargins
WR2$logit<-logit
#Computing Accuracy
(6+12)/42
#Computing Sensitivity/Recall (TPR)
12/21
#Computing Specificity (TNR)
6/21
#Computing Precision (PPV)
12/27
#GG-Plot
library(ggplot2)
ggplot(WR2, aes(fill=sex, x=logit))+geom_density(alpha=0.3)
#ROC plot and AUC
library(plotROC)
ROCplot<-ggplot(WR2)+geom_roc(aes(d=y, m=probrit), n.cuts=0)+geom_segment(aes(x=0, xend=1, y=0, yend=1), lty=2)+scale_x_continuous(limits=c(0,1))
ROCplot
calc_auc(ROCplot)
#Repeated Random Sub-Sampling
library(tidyverse); library(lmtest); library(MASS)
WR3<-WR2%>%transmute(education=education, sex=sex, agree=agree, disagree=disagree, education_c=education_c, agree_c=agree_c, athome=athome, logit=logit, y=ifelse(sex=="Male",1,0))
jit<-glm(y~athome+education,data=WR3,family="binomial")
prob<-predict(jit,type="response")
set.seed(1234)
k=5
data1<-WR3[sample(nrow(WR3)),]
folds<-cut(seq(1:nrow(WR3)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$y
hit<-glm(y~athome+education,data=train,family="binomial")
probs<-predict(hit,newdata = test,type="response")
#diags<-rbind(diags,class_diag(probs,truth))
}
#apply(diags, 2, mean)
library(glmnet)
#Logistic Regression
library(dplyr)
womensrole$y<-as.factor(WR2$y)
womensrole$sex<-NULL
womensrole$athome<-NULL
womensrole$agree_c<-NULL
womensrole$athome<-WR2$athome
womensrole$education_c<-NULL
womensrole$agree<-as.numeric(as.character(womensrole$agree))
yit<-lm(agree~disagree+education+y, data=womensrole)
summary(yit)
#LASSO on Data
y<-as.matrix(womensrole$agree)
model.matrix(yit)
x<-model.matrix(yit)[,-1]%>%scale%>%as.matrix
cv<-cv.glmnet(x,y)
lasso<-glmnet(x,y,lambda=cv$lambda.1se)
coef(lasso)
#CV
set.seed(1234)
k=10
data1<-womensrole[sample(nrow(womensrole)),]
folds<-cut(seq(1:nrow(womensrole)),breaks=k,labels=F)
diags<-NULL
for(i in 1:k){
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$agree
kit<-lm(agree~disagree+education,data=train)
probs<-predict(kit,newdata = test,type="response")
preds<-ifelse(probs>.5,1,0)
#diags<-rbind(diags,class_diag(probs,truth))
}
#Residual Standard Error/RMSE Calculation
library(caret)
sigma(kit)
summary(kit)
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
---
title: New to Working with Python
author: Nyssa Berlanga
date: '2019-12-13'
slug: pythonwork
categories: []
tags: []
description: 'These were my New Experiences Working with Python'
---
This semester, I had the privilege to work with the application Python after having learned more in depth tools about RStudio. Throughout my college career, I had only coded in R, and learning a new language that was more widely known by a larger group of people was exciting to me, as with more practice, I'd be able to build up my coding language in one that is more readily available to others. One of the concepts I found to be most interesting about Python was my last homework assignment, where I had to code a function that would take two different sequences and count up their respective k-mers, which are usually seen as 3-mers (with three codons total), or k = 3.
![](/blog/pythonwork_files/pythonkmer.png)
Attached above is the sample of the coding used in the project. Being a STEM major, this is a concept that is very appealing to me, as it has applications in fields such as Genetics & Genomics, and Biotechnology.
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_version()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
